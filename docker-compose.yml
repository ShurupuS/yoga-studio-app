version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: yoga_postgres
    environment:
      POSTGRES_DB: yoga_app
      POSTGRES_USER: yoga_user
      POSTGRES_PASSWORD: yoga_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/src/main/resources/db/init:/docker-entrypoint-initdb.d
    networks:
      - yoga_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U yoga_user -d yoga_app"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: yoga_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - yoga_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: yoga_app
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/yoga_app
      SPRING_DATASOURCE_USERNAME: yoga_user
      SPRING_DATASOURCE_PASSWORD: yoga_password
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - yoga_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
  redis_data:

networks:
  yoga_network:
    driver: bridge


